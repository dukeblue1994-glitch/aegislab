
name: AegisLab CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-lint:
    name: Security Linting & Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('tools/requirements.txt') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
        pip install bandit safety
        
    - name: Run security checks with Bandit
      run: |
        bandit -r tools/ emulation/ -f json -o bandit-report.json || true
        echo "Bandit security scan completed"
        
    - name: Check for known vulnerabilities
      run: |
        safety check --json || true
        echo "Safety vulnerability check completed"
        
    - name: Lint Python code
      run: |
        flake8 tools/ emulation/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 tools/ emulation/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  sigma-validation:
    name: Sigma Rule Validation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies and Sigma tools
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
        
    - name: Validate Sigma rules syntax
      run: |
        echo "Validating Sigma rules..."
        python -c "
        import yaml
        import os
        
        sigma_dir = 'detections/sigma'
        if os.path.exists(sigma_dir):
            for file in os.listdir(sigma_dir):
                if file.endswith('.yml') or file.endswith('.yaml'):
                    filepath = os.path.join(sigma_dir, file)
                    try:
                        with open(filepath, 'r') as f:
                            rule = yaml.safe_load(f)
                        # Basic validation
                        required_fields = ['title', 'id', 'description', 'detection']
                        for field in required_fields:
                            if field not in rule:
                                raise ValueError(f'Missing required field: {field}')
                        print(f'✓ {file} - Valid Sigma rule')
                    except Exception as e:
                        print(f'✗ {file} - Error: {e}')
                        exit(1)
        else:
            print('No Sigma rules directory found')
        "
        
    - name: Run aegisctl validate-sigma if available
      run: |
        python tools/aegisctl.py validate-sigma || echo "validate-sigma command not implemented yet"

  test-pipeline:
    name: Test AegisLab Pipeline
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
        
    - name: Run unit tests
      run: |
        pytest tests/ -v --tb=short
        
    - name: Test synthetic data generation
      run: |
        python tools/aegisctl.py synth
        echo "✓ Synthetic data generation successful"
        
    - name: Test analysis pipeline
      run: |
        python tools/aegisctl.py analyze
        echo "✓ Analysis pipeline successful"
        
    - name: Test report generation
      run: |
        python tools/aegisctl.py report
        echo "✓ Report generation successful"
        
    - name: Verify output files
      run: |
        ls -la data/synthetic/ || echo "No synthetic data directory"
        ls -la report/ || echo "No report directory"
        echo "✓ Pipeline execution completed"

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build CanaryShop image
      run: |
        docker build -t canaryshop:test app/canaryshop/
        
    - name: Run basic Docker security check
      run: |
        echo "Running basic Docker security checks..."
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy:latest image canaryshop:test || echo "Trivy scan completed"

  compliance-check:
    name: Security Compliance
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
        
    - name: Verify security documentation
      run: |
        echo "Checking for security documentation..."
        if [ -f "CODE_OF_CONDUCT.md" ]; then
          echo "✓ Code of Conduct found"
        else
          echo "⚠ Code of Conduct missing"
        fi
        
        if [ -f "LICENSE" ]; then
          echo "✓ License file found"
        else
          echo "⚠ License file missing"
        fi
        
        # Check for ethical usage guidelines in README
        if grep -q -i "legal\|ethic\|safe" README.md; then
          echo "✓ Ethical usage guidelines found in README"
        else
          echo "⚠ Ethical usage guidelines should be documented"
        fi

  integration-test:
    name: Full Integration Test
    runs-on: ubuntu-latest
    needs: [security-lint, sigma-validation, test-pipeline]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt
        
    - name: Run complete pipeline
      run: |
        echo "Running full AegisLab pipeline..."
        python tools/aegisctl.py synth
        python tools/aegisctl.py analyze
        python tools/aegisctl.py report
        echo "✓ Complete pipeline executed successfully"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: aegislab-results
        path: |
          data/synthetic/
          report/
          
    - name: Generate summary
      run: |
        echo "## AegisLab Pipeline Results 🛡️" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Synthetic data generation completed" >> $GITHUB_STEP_SUMMARY
        echo "✅ Security analysis completed" >> $GITHUB_STEP_SUMMARY
        echo "✅ Executive report generated" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Generated Files:" >> $GITHUB_STEP_SUMMARY
        echo "- Synthetic HTTP logs with security events" >> $GITHUB_STEP_SUMMARY
        echo "- Security analysis findings (YAML)" >> $GITHUB_STEP_SUMMARY
        echo "- Executive security report (Markdown)" >> $GITHUB_STEP_SUMMARY
